/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.zoo_animals.view;

import com.mycompany.zoo_animals.model.Aerial;
import com.mycompany.zoo_animals.model.Habitat;
import com.mycompany.zoo_animals.service.IAerialService;
import com.mycompany.zoo_animals.service.IHabitatService;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import javax.swing.text.PlainDocument;

/**
 *
 * @author santiagomanchola
 */
public class GUICreateAerial extends javax.swing.JFrame {

    @Override
    public void setVisible(boolean b) {
        if (b) {
            refreshHabitats();
        }
        super.setVisible(b);
    }

    private IAerialService aerialService;
    private IHabitatService habitatService;
    private java.util.List<com.mycompany.zoo_animals.model.Habitat> habitats;

    /**
     * Creates new form GUICreateAerial
     */
    public GUICreateAerial(IAerialService aerialService, IHabitatService habitatService) {
        this.aerialService = aerialService;
        this.habitatService = habitatService;
        refreshHabitats();
        initComponents();
        setLocationRelativeTo(null);
        setupFieldValidations();
        widenForm();
    }

    private void refreshHabitats() {
        if (this.habitatService != null) {
            this.habitats = habitatService.getAll();
        } else {
            this.habitats = new java.util.ArrayList<>();
        }
        if (habitatComboBox != null) {
            java.util.List<String> names = new java.util.ArrayList<>();
            names.add("Ninguno");
            habitats.forEach(h -> names.add(h.getName()));
            habitatComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(names.toArray(new String[0])));
            habitatComboBox.setSelectedIndex(0);
        }
    }

    private void widenForm() {
        int cols = 20;
        idInput.setColumns(cols);
        nameInput.setColumns(cols);
        weightInput.setColumns(cols);
        birthDateInput.setColumns(cols - 4);
        wingspanInput.setColumns(cols);
        habitatComboBox.setPrototypeDisplayValue("XXXXXXXXXXXXXXXXXXXXXXXX");
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idLabel = new javax.swing.JLabel();
        idInput = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        weightInput = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        birthDateInput = new javax.swing.JTextField();
        birthDatePickerBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        wingspanInput = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        habitatComboBox = new javax.swing.JComboBox();
        closeBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar animal aereo");

        idLabel.setText("Identificador");

        jLabel1.setText("Nombre");

        jLabel2.setText("Peso");

        jLabel3.setText("Fecha de nacimiento");

        birthDatePickerBtn.setText("ðŸ“…");
        birthDatePickerBtn.setToolTipText("Seleccionar fecha");
        birthDateInput.setEditable(false);
        birthDateInput.setFocusable(false);
        birthDatePickerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                var chosen = DatePickerUtil.pickDate(GUICreateAerial.this, parseDateSafely(birthDateInput.getText()));
                if (chosen != null) birthDateInput.setText(chosen.toString());
            }
        });

        jLabel4.setText("Envergadura");

        jLabel5.setText("HÃ¡bitat");

        closeBtn.setText("Cerrar");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        addBtn.setText("Guardar");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idLabel)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idInput)
                            .addComponent(nameInput)
                            .addComponent(weightInput)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(birthDateInput)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(birthDatePickerBtn))
                            .addComponent(wingspanInput)
                            .addComponent(habitatComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(closeBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(idInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(weightInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(birthDateInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(birthDatePickerBtn))
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(wingspanInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(habitatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeBtn)
                    .addComponent(addBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void setupFieldValidations() {

        ((PlainDocument) nameInput.getDocument()).setDocumentFilter(new TextOnlyDocumentFilter());

        ((PlainDocument) weightInput.getDocument()).setDocumentFilter(new NumericDocumentFilter());
        ((PlainDocument) wingspanInput.getDocument()).setDocumentFilter(new NumericDocumentFilter());

        ((PlainDocument) idInput.getDocument()).setDocumentFilter(new AlphanumericDocumentFilter());

        nameInput.setToolTipText("Solo letras y espacios");
        weightInput.setToolTipText("Solo nÃºmeros (ejemplo: 12.5)");
        wingspanInput.setToolTipText("Solo nÃºmeros (ejemplo: 2.5)");
        idInput.setToolTipText("Solo letras y nÃºmeros");
    }
    private void nameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameInputActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        dispose();
    }//GEN-LAST:event_closeBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        try {
            String id = idInput.getText().trim();
            String name = nameInput.getText().trim();
            double weight;
            LocalDate birthDate;
            double wingspan;
            Habitat habitat;
            Aerial aerial;

            if (id.isEmpty() || name.isEmpty() || weightInput.getText().trim().isEmpty()
                    || birthDateInput.getText().trim().isEmpty() || wingspanInput.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (aerialService.existsById(id)) {
                JOptionPane.showMessageDialog(this,
                        "El ID '" + id + "' ya existe.\n"
                        + "Por favor ingresa un identificador diferente.",
                        "ID Duplicado",
                        JOptionPane.WARNING_MESSAGE);
                idInput.requestFocus();
                idInput.selectAll();
                return;
            }

            weight = Double.parseDouble(weightInput.getText().trim());
            birthDate = LocalDate.parse(birthDateInput.getText().trim());
            wingspan = Double.parseDouble(wingspanInput.getText().trim());

            int sel = habitatComboBox.getSelectedIndex();
            if (sel <= 0) {
                habitat = null;
            } else {
                habitat = habitats.get(sel - 1);
            }

            aerial = new Aerial(id, name, weight, birthDate, wingspan, habitat);
            aerialService.add(aerial);

            JOptionPane.showMessageDialog(this, "Animal aÃ©reo agregado correctamente.", "Ã‰xito", JOptionPane.INFORMATION_MESSAGE);

            idInput.setText("");
            nameInput.setText("");
            weightInput.setText("");
            birthDateInput.setText("");
            wingspanInput.setText("");
            // Reiniciar selecciÃ³n de hÃ¡bitat a "Ninguno" (Ã­ndice 0) para consistencia
            habitatComboBox.setSelectedIndex(0);

        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Error en formato numÃ©rico. Verifica peso y envergadura.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (java.time.format.DateTimeParseException dte) {
            JOptionPane.showMessageDialog(this, "Error en formato de fecha. Usa el formato YYYY-MM-DD.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "OcurriÃ³ un error inesperado: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void habitatAreaInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_habitatAreaInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_habitatAreaInputActionPerformed

    private void climateInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_climateInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_climateInputActionPerformed

    private java.time.LocalDate parseDateSafely(String txt) {
        try {
            if (txt == null || txt.isBlank()) {
                return null;
            }
            return java.time.LocalDate.parse(txt.trim());
        } catch (Exception ex) {
            return null;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JTextField birthDateInput;
    private javax.swing.JButton birthDatePickerBtn;
    private javax.swing.JButton closeBtn;
    private javax.swing.JComboBox habitatComboBox;
    private javax.swing.JTextField idInput;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField nameInput;
    private javax.swing.JTextField weightInput;
    private javax.swing.JTextField wingspanInput;
    // End of variables declaration//GEN-END:variables
}
