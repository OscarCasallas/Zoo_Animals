/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.zoo_animals.view;

import com.mycompany.zoo_animals.service.IAerialService;
import java.awt.Font;
import java.awt.Color;

/**
 *
 * @author santiagomanchola
 */
public class GUIDeleteAerial extends javax.swing.JFrame {

    private IAerialService aerialService;

    /**
     * Creates new form GUIDeleteAerial
     */
    public GUIDeleteAerial(IAerialService aerialService) {
        this.aerialService = aerialService;
        initComponents();
        setLocationRelativeTo(null);
        styleComponents();

        searchInput.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                clearFields();
            }

            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                clearFields();
            }

            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                clearFields();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchInput = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        idInput = new javax.swing.JTextField();
        idLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        weightInput = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        birthDateInput = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        wingspanInput = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        habitatNameInput = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        habitatAreaInput = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        climateInput = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Eliminar animal aereo");

        searchInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchInputActionPerformed(evt);
            }
        });

        btnSearch.setText("Buscar");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        idInput.setEditable(false);
        idInput.setEnabled(false);
        idInput.setFocusable(false);

        idLabel.setText("Identificador");

        jLabel1.setText("Nombre");

        nameInput.setEditable(false);
        nameInput.setEnabled(false);
        nameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameInputActionPerformed(evt);
            }
        });

        jLabel2.setText("Peso");

        weightInput.setEditable(false);
        weightInput.setEnabled(false);

        jLabel3.setText("Fecha de nacimiento");

        birthDateInput.setEditable(false);
        birthDateInput.setEnabled(false);

        jLabel4.setText("Envergadura");

        wingspanInput.setEditable(false);
        wingspanInput.setEnabled(false);

        jLabel5.setText("Nombre Habitat");

        habitatNameInput.setEditable(false);
        habitatNameInput.setEnabled(false);

        jLabel6.setText("Area Habitat");

        habitatAreaInput.setEditable(false);
        habitatAreaInput.setEnabled(false);
        habitatAreaInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                habitatAreaInputActionPerformed(evt);
            }
        });

        jLabel7.setText("Clima Habitat");

        climateInput.setEditable(false);
        climateInput.setEnabled(false);
        climateInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                climateInputActionPerformed(evt);
            }
        });

        btnDelete.setText("Eliminar");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

    btnClose.setText("Cerrar");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(habitatNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(habitatAreaInput, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(climateInput, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchInput, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4)))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(wingspanInput, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(weightInput, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(idInput)
                            .addComponent(nameInput)
                            .addComponent(birthDateInput)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnClose)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idInput, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(weightInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(birthDateInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wingspanInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(habitatNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(habitatAreaInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(climateInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnClose))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchInputActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try {
            String id = searchInput.getText().trim();

            if (id.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Por favor ingresa un ID.",
                        "Error",
                        javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }

            var optionalAerial = aerialService.getById(id);

            optionalAerial.ifPresentOrElse(aerial -> {
                idInput.setText(aerial.getId());
                nameInput.setText(aerial.getName());
                weightInput.setText(String.valueOf(aerial.getWeightKg()));
                birthDateInput.setText(aerial.getBirthDate().toString());
                wingspanInput.setText(String.valueOf(aerial.getWingspan()));
                if (aerial.getHabitat() != null) {
                    habitatNameInput.setText(aerial.getHabitat().getName());
                    habitatAreaInput.setText(String.valueOf(aerial.getHabitat().getAreaM2()));
                    climateInput.setText(aerial.getHabitat().getClimate());
                } else {
                    habitatNameInput.setText("Ninguno");
                    habitatAreaInput.setText("NA");
                    climateInput.setText("NA");
                }

                javax.swing.JOptionPane.showMessageDialog(this,
                        "Animal encontrado.",
                        "Éxito",
                        javax.swing.JOptionPane.INFORMATION_MESSAGE);

            }, () -> {
                clearFields();
                javax.swing.JOptionPane.showMessageDialog(this,
                        "No se encontró un animal con ID " + id,
                        "Error de búsqueda",
                        javax.swing.JOptionPane.ERROR_MESSAGE);
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    e.getMessage(),
                    "Animal no encontrado",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void clearFields() {
        idInput.setText("");
        nameInput.setText("");
        weightInput.setText("");
        birthDateInput.setText("");
        wingspanInput.setText("");
        habitatNameInput.setText("");
        habitatAreaInput.setText("");
        climateInput.setText("");
    }

    private void nameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameInputActionPerformed

    private void habitatAreaInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_habitatAreaInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_habitatAreaInputActionPerformed

    private void climateInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_climateInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_climateInputActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            String id = idInput.getText().trim();

            if (id.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Primero busca un animal antes de eliminar.",
                        "Error",
                        javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }

            int confirm = javax.swing.JOptionPane.showConfirmDialog(this,
                    "¿Estás seguro de eliminar el animal con ID " + id + "?",
                    "Confirmar eliminación",
                    javax.swing.JOptionPane.YES_NO_OPTION);

            if (confirm == javax.swing.JOptionPane.YES_OPTION) {
                aerialService.deleteById(id);

                javax.swing.JOptionPane.showMessageDialog(this,
                        "Animal eliminado correctamente.",
                        "Éxito",
                        javax.swing.JOptionPane.INFORMATION_MESSAGE);

                clearFields();
                searchInput.setText("");
            }

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Error al eliminar: " + e.getMessage(),
                    "Error",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void styleComponents() {
        Font base = idLabel.getFont();
        Font bold = base.deriveFont(Font.BOLD);
        idLabel.setFont(bold);
        jLabel1.setFont(bold);
        jLabel2.setFont(bold);
        jLabel3.setFont(bold);
        jLabel4.setFont(bold);
        jLabel5.setFont(bold);
        jLabel6.setFont(bold);
        jLabel7.setFont(bold);

        javax.swing.JTextField[] readOnly = {
            idInput, nameInput, weightInput, birthDateInput, wingspanInput,
            habitatNameInput, habitatAreaInput, climateInput
        };
        for (javax.swing.JTextField f : readOnly) {
            f.setEnabled(true);
            f.setEditable(false);
            f.setBackground(Color.WHITE);
            f.setDisabledTextColor(Color.BLACK);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField birthDateInput;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearch;
    private javax.swing.JTextField climateInput;
    private javax.swing.JTextField habitatAreaInput;
    private javax.swing.JTextField habitatNameInput;
    private javax.swing.JTextField idInput;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField nameInput;
    private javax.swing.JTextField searchInput;
    private javax.swing.JTextField weightInput;
    private javax.swing.JTextField wingspanInput;
    // End of variables declaration//GEN-END:variables
}
